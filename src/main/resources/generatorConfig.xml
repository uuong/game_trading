<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <properties resource="jdbc.properties"/>
    <!-- 数据库驱动-->
    <classPathEntry location="${jdbc.path}"/>
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="${jdbc.driverClass}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.user}" password="${jdbc.password}">
        </jdbcConnection>
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
         targetPackage     指定生成的model生成所在的包名
         targetProject     指定在该项目下所在的路径
         -->
        <javaModelGenerator targetPackage="com.sky.pojo" targetProject="src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!-- 生成映射文件的包名和位置  也就是mapping-->
        <sqlMapGenerator targetPackage="mapping.map"
                         targetProject="./src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 生成DAO的包名和位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.sky.dao"
                             targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名-->
        <table tableName="users" domainObjectName="User"  >
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类
            enable*ByExample      是否生成 example类   -->
            <!-- 忽略列，不生成bean 字段 -->
            <ignoreColumn column="FRED"/>
            <!-- 指定列的java数据类型 -->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR"/>
        </table>
        <table tableName="goods" domainObjectName="Goods"  >
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类
            enable*ByExample      是否生成 example类   -->
            <!-- 忽略列，不生成bean 字段 -->
            <ignoreColumn column="FRED"/>
            <!-- 指定列的java数据类型 -->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR"/>
        </table>
        <table tableName="orders" domainObjectName="Order"  >
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类
            enable*ByExample      是否生成 example类   -->
            <!-- 忽略列，不生成bean 字段 -->
            <ignoreColumn column="FRED"/>
            <!-- 指定列的java数据类型 -->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR"/>
        </table>

        <!--<table tableName="goods" domainObjectName="Goods">-->
            <!--&lt;!&ndash; schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类-->
            <!--enable*ByExample      是否生成 example类   &ndash;&gt;-->
            <!--&lt;!&ndash; 忽略列，不生成bean 字段 &ndash;&gt;-->
            <!--<ignoreColumn column="FRED"/>-->
            <!--&lt;!&ndash; 指定列的java数据类型 &ndash;&gt;-->
            <!--<columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR"/>-->
        <!--</table>-->
        <!--<table tableName="bid" domainObjectName="Bid">-->
            <!--&lt;!&ndash; schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类-->
            <!--enable*ByExample      是否生成 example类   &ndash;&gt;-->
            <!--&lt;!&ndash; 忽略列，不生成bean 字段 &ndash;&gt;-->
            <!--<ignoreColumn column="FRED"/>-->
            <!--&lt;!&ndash; 指定列的java数据类型 &ndash;&gt;-->
            <!--<columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR"/>-->
        <!--</table>-->
    </context>
</generatorConfiguration>